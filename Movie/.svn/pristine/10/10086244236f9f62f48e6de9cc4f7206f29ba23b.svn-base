package com.spring.controller;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

// 영화관
// 예매를 관리하는 컨트롤러

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.spring.service.ReservationService;
import com.spring.service.vo.BookVO;
import com.spring.service.vo.MemberVO;
import com.spring.service.vo.MovieVO;
import com.spring.service.vo.ScheduleVO;
import com.spring.service.vo.ScreenVO;

@Controller
public class ReservationController {

	@Resource(name = "reservationService")
	private ReservationService reservationService;
	
	//관리자 페이지
	//상영관 등록
	@RequestMapping(value = "/screenRegForm.do")
	public String screenRegForm(Model model) {
		model.addAttribute("page", "/jsp/reservation/screenRegForm.jsp");
		return "/jsp/admin/admin_page.jsp";
	}

	//상영관 목록 조회
	@RequestMapping(value = "/selectScreenList.do")
	public String selectScreenList(Model model) {
		model.addAttribute("list", reservationService.selectScreenListAdmin());
		model.addAttribute("page","/jsp/admin/admin_screen_list.jsp");
		return "/jsp/admin/admin_page.jsp";
	}
	
	//상영 일정 조회
	
	//상영 일정 등록
	@RequestMapping(value = "/scheduleRegForm.do")
	public String scheduleRegForm(Model model) {
		model.addAttribute("page", "/jsp/reservation/scheduleRegForm.jsp");
		return "/jsp/admin/admin_page.jsp";
	}
	
	//예매 버튼 클릭 시, 상영 시간표 화면
	@RequestMapping(value = "/scheduleList.do")
	public String memberJoinForm(Model model, HttpSession session) {
		MovieVO movieVO = (MovieVO)session.getAttribute("MOVIE_INFO");
		//이 영화의 상영관 별 상영시간표와 잔여 좌석
		model.addAttribute("screenList", reservationService.selcetScreenList(movieVO));
		
		model.addAttribute("page", "/jsp/reservation/scheduleList.jsp");
		return "/jsp/main.jsp";
	}

	//시간 선택 하면, 좌석 선택 화면
	@RequestMapping(value = "/chooseSeat.do")
	public String chooseSeat(ScheduleVO scheduleVO, Model model, HttpSession session) {
		//좌석들 조회
		model.addAttribute("seatList", reservationService.selectBookList(scheduleVO));
		//상영관 열 조회
		model.addAttribute("colCnt", reservationService.selectSeatColCnt(scheduleVO));
		
		MovieVO movieVO = (MovieVO)session.getAttribute("MOVIE_INFO");
		model.addAttribute("movieTitle", movieVO.getMovieTitle());
		model.addAttribute("page", "/jsp/reservation/chooseSeat.jsp");
		return "/jsp/main.jsp";
	}

	//좌석 선택 후 예매 누르면,
	//이선좌 또는 확인창
	@ResponseBody
	@RequestMapping(value = "/isReserved.do")
	public int isReserved(@RequestParam(name = "bookNums") String bookNums) {
		int reservation = 0;
		String[] bookNum = bookNums.split(",");
		BookVO[] bookVO = new BookVO[bookNum.length];
		boolean flag = true;
		for(int i = 0; i < bookNum.length; i++) {
			bookVO[i] = new BookVO();
			bookVO[i].setBookNum(Integer.parseInt(bookNum[i]));
			if(reservationService.selectIsReserved(bookVO[i]).getIsReserved().equals("N")) {
				reservation += 1;
			}
			else {
				flag = false;
			}
		}
		if(flag) {
			return reservation;
		}
		else {
			return 0;
		}
	}
	
	//확인창에서 '예'를 누르면, 결제화면으로 이동
	@RequestMapping(value = "/reservation.do")
	public String reservation(@RequestParam(name = "bookNums") String bookNums, Model model) {
		String[] bookNum = bookNums.split(",");
		BookVO[] bookVO = new BookVO[bookNum.length];
		List<BookVO> list = new ArrayList<>();
		for(int i = 0; i < bookNum.length; i++) {
			bookVO[i] = new BookVO();
			bookVO[i].setBookNum(Integer.parseInt(bookNum[i]));
			reservationService.updateBookIsReserved(bookVO[i]);
			list.add(reservationService.selectMyReservation(bookVO[i]));
		}
		model.addAttribute("list", list);
		model.addAttribute("page", "/jsp/reservation/paymentScreen.jsp");
		return "/jsp/main.jsp";
	}
}
