<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="movieMapper">
	<resultMap type="com.spring.service.vo.MovieVO" id="movie">
		<result column="MOVIE_NUM" 				property="movieNum"/>
		<result column="MOVIE_TITLE" 			property="movieTitle"/>
		<result column="MOVIE_IMAGE" 			property="movieImage"/>
		<result column="MOVIE_DERECTOR" 		property="movieDerector"/>
		<result column="MOVIE_ACTORS" 			property="movieActors"/>
		<result column="MOVIE_CONTENT" 			property="movieContent"/>
		<result column="MOVIE_OPEN_DATE" 		property="movieOpenDate"/>
		<result column="MOVIE_RUNNINGTIME" 		property="movieRunningTime"/>
		<result column="GENRE_NUM" 				property="genreNum"/>
		<result column="GENRE_NAME" 			property="genreName"/>
		<result column="RATING_NUM" 			property="ratingNum"/>
		<result column="RATING_NAME" 			property="ratingName"/>
	</resultMap>
	
	
	<resultMap type="com.spring.service.vo.GenreVO" id="genre">
		<result column="GENRE_NUM" 				property="genreNum"/>
		<result column="GENRE_NAME" 			property="genreName"/>
	</resultMap>
	
	<resultMap type="com.spring.service.vo.RatingVO" id="rating">
		<result column="RATING_NUM" 			property="ratingNum"/>
		<result column="RATING_NAME" 			property="ratingName"/>
	</resultMap>
	
	
	<resultMap type="com.spring.service.vo.ReplyVO" id="reply">
		<result column="REPLY_NUM" 			property="replyNum"/>
		<result column="REPLY_WRITER" 		property="replyWriter"/>
		<result column="REPLY_CONTENT" 		property="replyContent"/>
		<result column="REPLY_DATE" 		property="replyDate"/>
		<result column="SCORE_NUM" 			property="scoreNum"/>
		<result column="SCORE_GRADE" 		property="scoreGrade"/>
		<result column="MOVIE_NUM" 			property="movieNum"/>
	</resultMap>
	
	<resultMap type="com.spring.service.vo.ScoreVO" id="score">
		<result column="SCORE_NUM" 			property="scoreNum"/>
		<result column="SCORE_GRADE" 		property="scoreGrade"/>
	</resultMap>
	
	<!-- 장르 리스트 -->
	<select id="selectGenreList" resultMap="genre">
		SELECT GENRE_NUM
			, GENRE_NAME
		FROM GENRE
		ORDER BY GENRE_NUM
	</select>
	
	<!-- 관람 등급 리스트 -->
	<select id="selectRatingList" resultMap="rating">
		SELECT RATING_NUM
			, RATING_NAME
		FROM RATING
		ORDER BY RATING_NUM
	</select>
	
	<!-- 영화 리스트 조회 -->
	<select id="selectMovieList" resultMap="movie">
		SELECT MOVIE_NUM
        	, MOVIE_TITLE
        	, MOVIE_IMAGE
        	, R.RATING_NAME
        	, TO_CHAR(MOVIE_OPEN_DATE,'YYYY-MM-DD') AS MOVIE_OPEN_DATE
		FROM MOVIE M, RATING R
		WHERE M.RATING_NUM = R.RATING_NUM
		<if test="searchValue != null and searchValue != ''">
		WHERE UPPER(${searchKeyword}) LIKE '%'||UPPER(#{searchValue})||'%'
		</if>
		ORDER BY MOVIE_NUM
	</select>
	
	<!-- 영화 등록 -->
	<insert id="insertMovie">
	INSERT INTO MOVIE (
    	MOVIE_NUM
    	, RATING_NUM
    	, MOVIE_TITLE
   		, MOVIE_IMAGE
    	, MOVIE_DERECTOR
    	, MOVIE_ACTORS
    	, GENRE_NUM
    	, MOVIE_CONTENT
    	, MOVIE_OPEN_DATE
    	, MOVIE_RUNNINGTIME
	) VALUES (
    	(SELECT NVL(MAX(MOVIE_NUM),0)+1 FROM MOVIE)
    	, #{ratingNum }
    	, #{movieTitle }
    	, #{movieImage }
    	, #{movieDerector }
    	, #{movieActors }
    	, #{genreNum }
    	, #{movieContent }
    	, #{movieOpenDate }
    	, #{movieRunningTime }
	)
	</insert>
	
	<!-- 영화 상세보기 -->
	<select id="selectMovieDetail" resultMap="movie">
		SELECT MOVIE_NUM
    		, R.RATING_NAME
    		, MOVIE_TITLE
   			, MOVIE_IMAGE
    		, MOVIE_DERECTOR
    		, MOVIE_ACTORS
    		, G.GENRE_NAME
    		, MOVIE_CONTENT
    		, TO_CHAR(MOVIE_OPEN_DATE,'YYYY-MM-DD') AS MOVIE_OPEN_DATE
    		, MOVIE_RUNNINGTIME
    	FROM MOVIE M, RATING R, GENRE G
    	WHERE M.RATING_NUM = R.RATING_NUM
    	AND M.GENRE_NUM = G.GENRE_NUM
    	AND MOVIE_NUM = #{movieNum}
	</select>
	
	<!-- 댓글 추가 -->
	<insert id="insertReply">
		INSERT INTO MOVIE_REPLY (
			REPLY_NUM
			, REPLY_WRITER
			, REPLY_CONTENT
			, CREATE_DATE
			, MOVIE_NUM
			, SCORE_NUM
		) VALUES (
			(SELECT NVL(MAX(REPLY_NUM),0) + 1 FROM MOVIE_REPLY)
			, #{replyWriter}
			, #{replyContent}
			, SYSDATE
			, #{movieNum}
			, #{scoreNum}
		)
	</insert>
	
	<!-- 평점 리스트 -->
	<select id="selectScoreList" resultMap="score">
		SELECT SCORE_NUM
			, SCORE_GRADE
		FROM SCORE
		ORDER BY SCORE_NUM
	</select>
	
	
	<!-- 댓글 조회 -->
	<select id="selectReplyList" resultMap="reply">
		SELECT REPLY_NUM
			, REPLY_WRITER
			, REPLY_CONTENT
			, TO_CHAR(CREATE_DATE,'YYYY-MM-DD') AS CREATE_DATE
			, MOVIE_NUM
			, S.SCORE_GRADE
		FROM MOVIE_REPLY R, SCORE S
		WHERE R.SCORE_NUM = S.SCORE_NUM
		AND MOVIE_NUM = #{movieNum}
		ORDER BY REPLY_NUM DESC
	</select>
</mapper>











